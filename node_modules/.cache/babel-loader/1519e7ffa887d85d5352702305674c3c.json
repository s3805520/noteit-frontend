{"ast":null,"code":"import _toConsumableArray from \"D:\\\\projects\\\\git\\\\noteit-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"D:\\\\projects\\\\git\\\\noteit-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\projects\\\\git\\\\noteit-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\projects\\\\git\\\\noteit-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\projects\\\\git\\\\noteit-frontend\\\\src\\\\components\\\\TodoList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport TodoCard from \"./TodoCard\";\nimport Typography from '@material-ui/core/Typography';\nimport { useParams, useHistory } from 'react-router-dom';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    card: {\n      width: '100%'\n    },\n    edit: {\n      marginTop: theme.spacing(3),\n      marginLeft: theme.spacing(1),\n      backgroundColor: \"blue\"\n    },\n    delete: {\n      marginTop: theme.spacing(3),\n      marginLeft: theme.spacing(1),\n      backgroundColor: \"red\"\n    },\n    form: {\n      width: '100%'\n    },\n    submit: {\n      margin: theme.spacing(3, 2, 2)\n    }\n  };\n}); // todoList to be set in backend fetched frm database and passed as a parameter to TodoLists\n\nexport default function TodoList(_ref) {\n  var _this = this;\n\n  var props = _ref.props;\n  var history = useHistory();\n  var classes = useStyles();\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      list = _useState2[0],\n      setList = _useState2[1];\n\n  var getUserData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userName) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"/getUserData\", {\n                method: \"POST\",\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  email: userName\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                var responseData = data[\"notes\"];\n\n                if (responseData !== \"\") {\n                  var responseList = responseData.split(\"\\\\r\\\\n\");\n                  setList(responseList);\n                }\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getUserData(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var setUserData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(method, id, newList) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(method, {\n                method: \"POST\",\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  email: id,\n                  notes: newList\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                console.log(data);\n                var responseData = data[\"notes\"];\n\n                if (responseData !== \"\") {\n                  var responseList = responseData.split(\"\\\\r\\\\n\");\n                  setList(responseList);\n                } else {\n                  setList([]);\n                }\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function setUserData(_x2, _x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getUserData(id);\n    window.addEventListener(\"popstate\", function () {\n      history.go(1);\n    });\n  }, []);\n\n  var deleteItem = function deleteItem(item) {\n    var newList = _toConsumableArray(list).filter(function (listItem) {\n      return listItem !== item;\n    });\n\n    setUserData(\"/deleteNotes\", id, newList);\n  };\n\n  var addItem = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var item, newList;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              item = document.getElementById(\"addValue\").value;\n              document.getElementById(\"addValue\").value = \"\";\n              newList = [].concat(_toConsumableArray(list), [item]);\n              setUserData(\"/addNotes\", id, newList);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function addItem() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var editItem = function editItem(oldVal, newVal) {\n    var newList = _toConsumableArray(list).filter(function (listItem) {\n      return listItem !== oldVal;\n    });\n\n    setUserData(\"/updateNotes\", id, [newVal].concat(_toConsumableArray(newList)));\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: function onClick() {\n      return history.push(\"/signin\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"Logout\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    alignSelf: \"flex-start\",\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, \"Hi! \", id, \". Write down your notes...\"), /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"addValue\",\n    label: \"Enter a Value\",\n    name: \"add\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 31\n    }\n  }, \"Add\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, list.map(function (item) {\n    return /*#__PURE__*/React.createElement(TodoCard, {\n      key: \"todo\" + Math.floor(Math.random() * 1000000),\n      value: item,\n      deleteItem: deleteItem,\n      editItem: editItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    });\n  })));\n}","map":{"version":3,"sources":["D:/projects/git/noteit-frontend/src/components/TodoList.js"],"names":["React","useState","useEffect","makeStyles","Card","CardContent","Button","TextField","Container","CssBaseline","Box","TodoCard","Typography","useParams","useHistory","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","card","width","edit","marginLeft","backgroundColor","delete","form","submit","margin","TodoList","props","history","classes","id","list","setList","getUserData","userName","fetch","method","headers","body","JSON","stringify","email","then","response","json","data","responseData","responseList","split","setUserData","newList","notes","console","log","window","addEventListener","go","deleteItem","item","filter","listItem","addItem","document","getElementById","value","editItem","oldVal","newVal","push","map","Math","floor","random"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Box from '@material-ui/core/Box';    \r\nimport TodoCard from \"./TodoCard\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  card:{\r\n    width: '100%',\r\n  },\r\n  edit: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n    backgroundColor: \"blue\"\r\n  },\r\n  delete: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n    backgroundColor: \"red\"\r\n  },\r\n  form: {\r\n    width: '100%',\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 2, 2),\r\n  },\r\n}));\r\n\r\n// todoList to be set in backend fetched frm database and passed as a parameter to TodoLists\r\nexport default function TodoList({ props }) {\r\n    const history = useHistory();\r\n    const classes = useStyles()\r\n    const { id } = useParams()\r\n    const [list, setList] = useState([])\r\n\r\n    const getUserData = async(userName) => {\r\n      await fetch(\"/getUserData\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'Content-Type' : 'application/json'\r\n          },\r\n            body: JSON.stringify({email: userName})\r\n          })\r\n          .then(function(response) {\r\n            return response.json()\r\n          })\r\n          .then(function(data) {\r\n            var responseData = data[\"notes\"]\r\n            if(responseData !== \"\") {\r\n              var responseList = responseData.split(\"\\\\r\\\\n\")\r\n              setList(responseList)\r\n            }\r\n      })\r\n    }\r\n\r\n    const setUserData = async(method, id, newList) => {\r\n      await fetch(method, {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-Type' : 'application/json'\r\n        },\r\n          body: JSON.stringify({email: id, notes: newList})\r\n        })\r\n        .then(function(response) {\r\n          return response.json()\r\n        })\r\n        .then(function(data) {\r\n          console.log(data)\r\n          var responseData = data[\"notes\"]\r\n          if(responseData !== \"\") {\r\n            var responseList = responseData.split(\"\\\\r\\\\n\")\r\n            setList(responseList)\r\n          }\r\n          else {\r\n            setList([])\r\n          }\r\n      })\r\n    }\r\n\r\n    useEffect(() => {\r\n      getUserData(id)\r\n      window.addEventListener(\"popstate\", () => {\r\n        history.go(1);\r\n      });\r\n    },[])\r\n\r\n    const deleteItem = (item) => {\r\n        var newList = [...list].filter(listItem => (listItem !== item))\r\n        setUserData(\"/deleteNotes\", id, newList)\r\n    }\r\n\r\n    const addItem = async() => {\r\n      const item = document.getElementById(\"addValue\").value\r\n      document.getElementById(\"addValue\").value = \"\"\r\n      var newList = [...list, item]\r\n      setUserData(\"/addNotes\", id, newList)\r\n    }\r\n\r\n    const editItem = (oldVal, newVal) => {\r\n      var newList = [...list].filter(listItem => (listItem !== oldVal))\r\n      setUserData(\"/updateNotes\", id, [newVal, ...newList])\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"md\">\r\n            <CssBaseline />\r\n              <Box display=\"flex\">\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={() => history.push(\"/signin\")}\r\n                >\r\n                    Logout\r\n                </Button>\r\n              </Box>\r\n            <div className={classes.paper}>\r\n                <Typography alignSelf=\"flex-start\" component=\"h1\" variant=\"h5\">\r\n                    Hi! { id }. Write down your notes...\r\n                </Typography>\r\n              <Card className={classes.card} >\r\n                  <CardContent>        \r\n                          <Box display=\"flex\">\r\n                              <TextField\r\n                                  variant=\"outlined\"\r\n                                  margin=\"normal\"\r\n                                  required\r\n                                  fullWidth\r\n                                  id=\"addValue\"\r\n                                  label=\"Enter a Value\"\r\n                                  name=\"add\"\r\n                                  autoFocus\r\n                              />\r\n                              <Button\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  className={classes.submit}\r\n                                  onClick={addItem}\r\n                              >\r\n                                  Add\r\n                              </Button>\r\n                          </Box>\r\n                  </CardContent>\r\n              </Card>\r\n            </div>\r\n            <div className={classes.paper}>\r\n                {list.map(item => (\r\n                    <TodoCard key={\"todo\" + Math.floor(Math.random()*1000000)} value={item} deleteItem={deleteItem} editItem={editItem}></TodoCard>\r\n                ))}\r\n            </div>\r\n        </Container>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}